import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import { motion } from "framer-motion";

export default function Home({ characters, charactersCopy }) {
  const [selected, setSelected] = useState([]);

  useEffect(() => {
    if (selected.length === 2) {
      if (selected[0].id === selected[1].id) {
        console.log("You win");
      } else {
        console.log("You lose");
      }
    }
  }, [selected]);

  const setCharacters = character => {
    if (selected.length < 2) {
      setSelected([...selected, character]);
    } else {
      setSelected([character]);
    }
  };

  return (
    <>
      <Head>
        <title>Rick & Morty game</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='flex justify-center mx-auto'>
        <div className='grid grid-cols-4 '>
          {characters?.map(character => (
            <motion.button
              key={character.id}
              onClick={() => {
                setCharacters(character)
                
              }}
              >
              <div
              initial={{ "rotateY": "0deg" }}
              animate={{ "rotateY": "90deg" }}
              transition={{ delay: 5, duration: 1 }}
              whileTap={
                {
                  transform: "rotateY(180deg)",
                }
              }
              
              >
              <Image
                src={character.image}
                alt={character.name}
                width={200}
                height={200}
                />
                </div>
            </motion.button>
          ))}
          {charactersCopy?.map(character => (
            <motion.button
              key={character.id}
              className=''
              onClick={() => setCharacters(character)}
              // initial={{ "--rotate": "0deg" }}
              // animate={{ "--rotate": "360deg" }}
              // transition={{ duration: 2, repeat: Infinity }}
            >
              <Image
                src={character.image}
                alt={character.name}
                width={200}
                height={200}
                style={{ transform: "rotate(var(--rotate))" }}
              />
            </motion.button>
          ))}
        </div>
      </div>
    </>
  );
}

export async function getServerSideProps(context) {
  const characters = [];

  for (let i = 1; i <= 10; i++) {
    const rdm = Math.floor(Math.random() * 826);
    const data = await fetch(`https://rickandmortyapi.com/api/character/${rdm}`, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
      },
    });
    const res = await data.json();
    characters.push(res);
  }

  const charactersCopy = [...characters];

  return {
    props: {
      characters,
      charactersCopy,
    },
  };
}
